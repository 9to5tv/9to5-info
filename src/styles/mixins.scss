@mixin rotate($degrees, $origin) {
  -webkit-transform: rotate($degrees);
  -webkit-transform-origin: $origin;
  -moz-transform: rotate($degrees);
  -moz-transform-origin: $origin;
  -ms-transform: rotate($degrees);
  -ms-transform-origin: $origin;
  -o-transform: rotate($degrees);
  -o-transform-origin: $origin;
  transform: rotate($degrees);
  transform-origin: $origin;
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}
$breakpoints: (
  'medium': (min-width: 800px),
  'large': (min-width: 1000px),
  'huge': (min-width: 1200px),
);